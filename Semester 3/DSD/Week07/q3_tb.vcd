$date
	Thu Oct 20 15:16:01 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q3_tb $end
$var wire 4 ! E [3:0] $end
$var reg 4 " B [3:0] $end
$scope module ex1 $end
$var wire 4 # B [3:0] $end
$var wire 4 $ E [3:0] $end
$scope module s0 $end
$var wire 3 % s [2:0] $end
$var wire 8 & w [0:7] $end
$var reg 1 ' f $end
$upscope $end
$scope module s1 $end
$var wire 3 ( s [2:0] $end
$var wire 8 ) w [0:7] $end
$var reg 1 * f $end
$upscope $end
$scope module s2 $end
$var wire 3 + s [2:0] $end
$var wire 8 , w [0:7] $end
$var reg 1 - f $end
$upscope $end
$scope module s3 $end
$var wire 3 . s [2:0] $end
$var wire 8 / w [0:7] $end
$var reg 1 0 f $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
10
b11111111 /
b0 .
1-
b10101010 ,
b0 +
0*
b1100111 )
b0 (
0'
b11111 &
b0 %
b11 $
b0 #
b0 "
b11 !
$end
#20
0-
00
b100 !
b100 $
1*
b0 /
b111111 &
b11001111 )
b1010101 ,
b1 "
b1 #
#40
b101 !
b101 $
10
b11111111 /
b11111 &
b1 %
b1100111 )
b1 (
b10101010 ,
b1 +
b1 .
b10 "
b10 #
#60
00
b110 !
b110 $
1-
b0 /
b111111 &
b11001111 )
b1010101 ,
b11 "
b11 #
#80
10
1*
b111 !
b111 $
1-
b11111111 /
b11111 &
b10 %
b1100111 )
b10 (
b10101010 ,
b10 +
b10 .
b100 "
b100 #
#100
0*
0-
00
b1000 !
b1000 $
1'
b0 /
b111111 &
b11001111 )
b1010101 ,
b101 "
b101 #
#120
b1001 !
b1001 $
10
b11111111 /
b11111 &
b11 %
b1100111 )
b11 (
b10101010 ,
b11 +
b11 .
b110 "
b110 #
#140
00
b1010 !
b1010 $
1-
b0 /
b111111 &
b11001111 )
b1010101 ,
b111 "
b111 #
#160
10
b1011 !
b1011 $
1-
b11111111 /
b11111 &
b100 %
b1100111 )
b100 (
b10101010 ,
b100 +
b100 .
b1000 "
b1000 #
#180
0-
00
b1100 !
b1100 $
1*
b0 /
b111111 &
b11001111 )
b1010101 ,
b1001 "
b1001 #
#200
b1101 !
b1101 $
10
b11111111 /
b11111 &
b101 %
b1100111 )
b101 (
b10101010 ,
b101 +
b101 .
b1010 "
b1010 #
#220
00
b1110 !
b1110 $
1-
b0 /
b111111 &
b11001111 )
b1010101 ,
b1011 "
b1011 #
#240
10
b1111 !
b1111 $
1-
b11111111 /
b11111 &
b110 %
b1100111 )
b110 (
b10101010 ,
b110 +
b110 .
b1100 "
b1100 #
#260
0-
b1100 !
b1100 $
00
b0 /
b111111 &
b11001111 )
b1010101 ,
b1101 "
b1101 #
#280
b1101 !
b1101 $
10
b11111111 /
b11111 &
b111 %
b1100111 )
b111 (
b10101010 ,
b111 +
b111 .
b1110 "
b1110 #
#300
00
b1110 !
b1110 $
1-
b0 /
b111111 &
b11001111 )
b1010101 ,
b1111 "
b1111 #
#320
