$date
	Thu Sep 15 15:57:47 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addsub_tb $end
$var wire 1 ! cout $end
$var wire 4 " S [3:0] $end
$var reg 4 # X [3:0] $end
$var reg 1 $ cin $end
$var reg 4 % y1 [3:0] $end
$scope module ex $end
$var wire 4 & X [3:0] $end
$var wire 1 $ cin $end
$var wire 4 ' y1 [3:0] $end
$var wire 1 ! cout $end
$var wire 4 ( Y [3:0] $end
$var wire 4 ) S [3:0] $end
$scope module stage0 $end
$var wire 1 $ ci $end
$var wire 4 * x0 [3:0] $end
$var wire 4 + y0 [3:0] $end
$var wire 4 , s0 [3:0] $end
$var wire 1 ! co $end
$var wire 1 - c3 $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$scope module stage0 $end
$var wire 1 $ Ci $end
$var wire 1 / Co $end
$var wire 1 0 s $end
$var wire 1 1 x $end
$var wire 1 2 y $end
$upscope $end
$scope module stage1 $end
$var wire 1 / Ci $end
$var wire 1 . Co $end
$var wire 1 3 s $end
$var wire 1 4 x $end
$var wire 1 5 y $end
$upscope $end
$scope module stage2 $end
$var wire 1 . Ci $end
$var wire 1 - Co $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module stage3 $end
$var wire 1 - Ci $end
$var wire 1 ! Co $end
$var wire 1 9 s $end
$var wire 1 : x $end
$var wire 1 ; y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1;
0:
09
18
07
06
15
04
03
02
11
00
1/
1.
1-
b0 ,
b1110 +
b1 *
b0 )
b1110 (
b1 '
b1 &
b1 %
1$
b1 #
b0 "
1!
$end
#20
13
0.
06
0-
09
0!
1/
12
05
08
0;
b1 (
b1 +
b10 "
b10 )
b10 ,
00
0$
#40
1!
1-
03
09
0/
06
02
18
1;
b1100 (
b1100 +
b1 "
b1 )
b1 ,
10
01
17
1$
b11 %
b11 '
b100 #
b100 &
b100 *
#60
16
1.
1/
15
00
b110 "
b110 )
b110 ,
13
b1110 (
b1110 +
11
14
b1 %
b1 '
b111 #
b111 &
b111 *
#80
19
0!
03
0/
0;
b110 (
b110 +
b1100 "
b1100 )
b1100 ,
00
01
0$
b110 %
b110 '
b110 #
b110 &
b110 *
#100
09
0-
0.
10
13
12
05
b111 "
b111 )
b111 ,
16
b101 (
b101 +
07
b101 %
b101 '
b10 #
b10 &
b10 *
#120
